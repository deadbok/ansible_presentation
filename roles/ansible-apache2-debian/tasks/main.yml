---
- name: Install packages
  package:
    name: "{{ item }}"
    update_cache: yes
    state: latest
  become: yes
  with_items:
    - apache2
    - ufw
    - mc
    - nano
    - git
    - rsync

- name: Enable mod_rewrite
  apache2_module: name=rewrite state=present
  become: yes
  notify:
    - restart apache2

- name: Apache2 listen on port {{ apache2_http_port }}
  lineinfile:
    dest: /etc/apache2/ports.conf
    regexp: "^Listen "
    line: "Listen {{ apache2_http_port }}"
    state: present
  become: yes
  notify:
    - restart apache2

- name: Apache2 virtualhost on port {{ apache2_http_port }}
  lineinfile:
    dest: /etc/apache2/sites-available/000-default.conf
    regexp: "^<VirtualHost \\*:"
    line: "<VirtualHost *:{{ apache2_http_port }}>"
  become: yes
  register: apache
  notify:
    - restart apache2

- name: Create virtual host file
  template:
    src: virtualhost.conf.j2
    dest: /etc/apache2/sites-available/{{ apache2_domain }}.conf
  become: yes

- name: Disable default site
  command: a2dissite 000-default
  args:
    removes: /etc/apache2/sites-enabled/000-default.conf
  become: yes
  notify:
    - restart apache2

- name: Enable site {{ apache2_domain }}
  command: a2ensite {{ apache2_domain }}
  args:
    creates: /etc/apache2/sites-enabled/{{ apache2_domain }}.conf
  become: yes
  notify:
    - restart apache2

- name: Clone site
  git:
    repo: "{{ apache2_site_git_url }}"
    accept_hostkey: yes
    dest: "/tmp/{{ apache2_domain }}"
    update: no
  register: site

- name: Create site root dir
  file:
    path: /var/www/{{ apache2_domain }}
    recurse: True
    state: directory
  become: yes

- name: Copy site into place
  shell: "cp -r /tmp/{{ apache2_domain }}/docs/* /var/www/{{ apache2_domain }}/"
  become: yes
  when: site.changed

- name: Open port 22 & 80 in ufw
  ufw:
    rule: allow
    port: '{{ item }}'
  become: yes
  with_items:
    - 22
    - 80
